USE Assemblerdb;

CREATE TABLE Users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    firstname VARCHAR(50) NOT NULL,
    lastname VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    img VARCHAR(255) DEFAULT NULL
);

CREATE TABLE Projects (
    id INT AUTO_INCREMENT PRIMARY KEY,
    userID INT, -- responsable
    name VARCHAR(100) NOT NULL,
    deadline DATE NOT NULL,
    maxMembers INT NOT NULL,
    slogan TEXT,
    type TEXT,
    FOREIGN KEY (userID) REFERENCES Users(id) ON DELETE SET NULL
);

CREATE TABLE UsPr (
    id INT AUTO_INCREMENT PRIMARY KEY,
    userID INT NOT NULL,
    projectID INT NOT NULL,
    FOREIGN KEY (userID) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (projectID) REFERENCES Projects(id) ON DELETE CASCADE,
    UNIQUE KEY unique_user_project (userID, projectID)
);

CREATE TABLE Msgs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    projectID INT NOT NULL,
    userID INT NOT NULL,
    msgID INT DEFAULT NULL, -- reply to another message
    content TEXT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (projectID) REFERENCES Projects(id) ON DELETE CASCADE,
    FOREIGN KEY (userID) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (msgID) REFERENCES Msgs(id) ON DELETE SET NULL
);

CREATE TABLE Docs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    content LONGBLOB NOT NULL,
    taskID INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    size FLOAT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (taskID) REFERENCES Tasks(id) ON DELETE CASCADE
);

CREATE TABLE Tasks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    projectID INT NOT NULL,
    userID INT, -- charged user
    name VARCHAR(100) NOT NULL,
    deadline DATE NOT NULL,
    status VARCHAR(100) DEFAULT 'TODO',
    descr TEXT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (projectID) REFERENCES Projects(id) ON DELETE CASCADE,
    FOREIGN KEY (userID) REFERENCES Users(id) ON DELETE SET NULL
);

CREATE TABLE Cmnts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    taskID INT NOT NULL,
    userID INT NOT NULL,
    content TEXT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (taskID) REFERENCES Tasks(id) ON DELETE CASCADE,
    FOREIGN KEY (userID) REFERENCES Users(id) ON DELETE CASCADE
);

CREATE TABLE Subtasks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    taskID INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    status BOOLEAN DEFAULT 0,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (taskID) REFERENCES Tasks(id) ON DELETE CASCADE
);

CREATE TABLE Events (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    deadline DATE DEFAULT CURRENT_TIMESTAMP,
    projectID INT,
    FOREIGN KEY (projectID) REFERENCES Projects(id) ON DE
);